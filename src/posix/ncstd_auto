#### -*- mode:sh -*- vim:ft=sh
####
## No More than a C build system for clang, gcc and msvc.
## https://github.com/junjiemars/nore
####
## check posix features
####


if [ -z "$POSIX_ROOT" ]; then
  POSIX_ROOT="src/posix"
fi


# check for cc's feature
. ${POSIX_ROOT}/ncc_auto


# check for <npstd.h>
. ${POSIX_ROOT}/npstd_auto


# check for <ndef.h>
. ${POSIX_ROOT}/ndef_auto


# checking for <nint.h>
. ${POSIX_ROOT}/nint_auto


# checking for <nstr.h>
. ${POSIX_ROOT}/nstr_auto


if [    "$ncstd_environ" = "yes"                \
   ]; then
  echo "checking for ncstd.h ..."
else
  return
fi


# check environ
#----------------------------------------
if [ "$ncstd_environ" = "yes" -a -z "$ncstd_environ_done" ]; then
  case $CC_NAME in
    clang)
      nm_feature="environ"
      nm_feature_name="nm_have_environ"
      nm_feature_run=no
      nm_feature_h='extern char **environ;'
      nm_feature_flags=
      nm_feature_test='(void*)(environ);'
      . ${NORE_ROOT}/auto/feature
      ;;
    gcc)
      nm_feature="environ"
      nm_feature_name="nm_have_environ"
      nm_feature_run=no
      nm_feature_h='extern char **environ;'
      nm_feature_flags="-D_POSIX_C_SOURCE=${_POSIX_C_SOURCE}"
      nm_feature_test='(void*)environ;'
      . ${NORE_ROOT}/auto/feature
      ;;
    msvc)
      nm_feature="environ"
      nm_feature_name="nm_have_environ"
      nm_feature_run=no
      nm_feature_h='extern char **_environ'
      nm_feature_flags="-D_CRT_SECURE_NO_WARNINGS $CFLAGS"
      nm_feature_test='(void*)_environ;'
      . ${NORE_ROOT}/auto/feature
      ;;
    *)
      ;;
  esac
  ncstd_environ_done="yes"
fi


# eof
