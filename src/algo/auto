#### -*- mode:sh -*- vim:ft=sh
####
## No More than a C build system for clang, gcc and msvc.
## https://github.com/junjiemars/nore
####
## algo/auto
####

if [ -z "$POSIX_ROOT" ]; then
  POSIX_ROOT="src/posix"
  flag="POSIX_ROOT" op=":=" value="$POSIX_ROOT" . ${NORE_ROOT}/auto/make_define
fi

# check ncstd.h features
ncc_cache_line_size="yes"
ncc_cpu_endian="yes"
ncc_sanitize_address="yes"
ncc_sanitize_alignment="yes"
ncc_sanitize_leak="yes"
ncc_sanitize_signed_integer_overflow="yes"
ndef___func__="yes"
ndef_restrict="yes"
ndef_static_assert="yes"
. ${POSIX_ROOT}/ncstd_auto


echo "checking for {algo} ..."

# check ffsl
#----------------------------------------
nm_feature="ffsl"
nm_feature_name="nm_have_flsl"
nm_feature_run=
nm_feature_h='#include <strings.h>'
nm_feature_flags="$CFLAGS"
nm_feature_test='(void)ffsl(0);'
. ${NORE_ROOT}/auto/feature

# check flsl
#----------------------------------------
nm_feature="flsl"
nm_feature_name="nm_have_flsl"
nm_feature_run=
nm_feature_h='#include <strings.h>'
nm_feature_flags="$CFLAGS"
nm_feature_test='(void)flsl(0);'
. ${NORE_ROOT}/auto/feature

# check long double width
#----------------------------------------
nm_feature="long double width"
nm_feature_name="nm_long_double_width"
nm_feature_run=value
nm_feature_h='#include <stdio.h>'
nm_feature_flags="$CFLAGS"
nm_feature_test='printf("%zu\n",sizeof(long double));'
. ${NORE_ROOT}/auto/feature


# eof
